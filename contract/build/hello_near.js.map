{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../src/models.ts","../src/utils.ts","../src/contract.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.init();\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        const rawState = near.storageRead(\"STATE\");\n        if (rawState) {\n            const state = JSON.parse(rawState);\n            // reconstruction of the contract class object from plain object\n            let c = this.default();\n            Object.assign(this, state);\n            for (const item in c) {\n                if (c[item].constructor?.deserialize !== undefined) {\n                    this[item] = c[item].constructor.deserialize(this[item]);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n    init() { }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import { near } from \"near-sdk-js\";\n\n/**\n * A message left by someone saying thanks\n */\nexport class Message {\n  public static max_length(): number {\n    return 100;\n  }\n\n  public sender: string;\n\n  constructor(\n    public text: string,\n    anonymous: boolean = false,\n    public contribution: bigint = BigInt(0)\n  ) {\n    this.sender = anonymous ? \"\" : near.signerAccountId();\n  }\n}\n\n/**\n * Helper class to track contribution summary data\n */\nexport class ContributionTracker {\n  public count: number = 0;\n  public total: bigint = BigInt(0);\n  public average: number;\n  public received: bigint = BigInt(0);\n  public transferred: bigint = BigInt(0);\n}\n\nexport function updateContribution(\n  tracker: ContributionTracker,\n  value: bigint\n): void {\n  // track money received separately\n  tracker.received = BigInt(tracker.received) + value;\n\n  // update tracking data\n  tracker.count = 1;\n  tracker.total = BigInt(tracker.total) + value;\n  tracker.average = Number(tracker.total) / (tracker.count * 1.0);\n}\n\nexport function recordTransfer(tracker: ContributionTracker): void {\n  tracker.transferred = BigInt(tracker.transferred) + BigInt(this.received);\n  tracker.received = BigInt(0);\n}\n","import { assert, near } from \"near-sdk-js\";\n\n/**\n * Function to assert that the contract has called itself\n */\nexport function assert_self(): void {\n  const caller = near.predecessorAccountId();\n  const self = near.jsvmJsContractName();\n  assert(caller == self, \"Only this contract may call itself\");\n}\n\nexport function assert_single_promise_success(): void {\n  const resultsCount = near.promiseResultsCount();\n  assert(resultsCount === BigInt(1), \"Expected exactly one promise result\");\n  const result = near.promiseResult(0);\n  assert(result === \"AVAILABLE\", \"Expected PromiseStatus to be successful\");\n}\n","import {\n  NearBindgen,\n  NearContract,\n  near,\n  call,\n  assert,\n  Vector,\n} from \"near-sdk-js\";\nimport {\n  ContributionTracker,\n  Message,\n  recordTransfer,\n  updateContribution,\n} from \"./models\";\nimport { assert_self, assert_single_promise_success } from \"./utils\";\n\nconst ONE_NEAR: bigint = BigInt(10e24);\nconst TGAS: bigint = BigInt(10e14);\nconst XCC_GAS: bigint = BigInt(5) * TGAS;\n// max 5 NEAR accepted to this contract before it forces a transfer to the owner\nconst CONTRIBUTION_SAFETY_LIMIT: bigint = ONE_NEAR * BigInt(5);\n\nBigInt.prototype[\"toJSON\"] = function () {\n  return this.toString();\n};\n\n// The @NearBindgen decorator allows this code to compile to Base64.\n@NearBindgen\nexport class Contract extends NearContract {\n  private owner: string;\n  private allow_anonymous: boolean;\n  // private messages: Vector<Message> = new Vector<Message>(\"m\")\n  private contributions: ContributionTracker = new ContributionTracker();\n  private messages: Vector;\n\n  constructor({\n    owner,\n    allow_anonymous = true,\n  }: {\n    owner: string;\n    allow_anonymous?: boolean;\n  }) {\n    super();\n    this.owner = owner;\n    this.allow_anonymous = allow_anonymous;\n    this.messages = new Vector(\"messages\");\n  }\n\n  default() {\n    return new Contract({ owner: near.signerAccountId() });\n  }\n\n  @call\n  say({\n    message,\n    anonymous = false,\n  }: {\n    message: string;\n    anonymous: boolean;\n  }): boolean {\n    // guard against too much money being deposited to this account in beta\n    const deposit = BigInt(Number(near.attachedDeposit()));\n    this.assert_financial_safety_limits(deposit);\n\n    // guard against invalid message size\n    assert(message.length > 0, \"Message length cannot be 0\");\n    assert(\n      message.length < Message.max_length(),\n      \"Message length is too long, must be less than \" +\n        Message.max_length().toString() +\n        \" characters.\"\n    );\n\n    if (!this.allow_anonymous) {\n      assert(!anonymous, \"Anonymous messages are not allowed by this contract\");\n    }\n\n    if (deposit > BigInt(0)) {\n      // this.contributions.update(deposit);\n      updateContribution(this.contributions, deposit);\n    }\n\n    this.messages.push(new Message(message, anonymous, deposit));\n    return true;\n  }\n\n  // ----------------------------------------------------------------------------\n  // OWNER methods\n  // ----------------------------------------------------------------------------\n\n  @call\n  list(): Array<Message> {\n    this.assert_owner();\n\n    const messages = [];\n    const length = this.messages.len();\n\n    for (let i = Math.max(length - 10, 0); i < length; i++) {\n      messages.push(this.messages.get(i));\n    }\n\n    return messages;\n  }\n\n  @call\n  summarize(): Contract {\n    this.assert_owner();\n    return this;\n  }\n\n  @call\n  transfer(): void {\n    this.assert_owner();\n\n    assert(\n      this.contributions.received > BigInt(0),\n      \"No received (pending) funds to be transferred\"\n    );\n\n    const self = near.jsvmJsContractName();\n    const promise = near.promiseBatchCreate(this.owner);\n\n    // transfer earnings to owner\n    near.promiseBatchActionTransfer(promise, this.contributions.received);\n\n    // confirm transfer complete\n    const complete = near.promiseThen(\n      promise,\n      self,\n      \"on_transfer_complete\",\n      \"{}\",\n      0,\n      XCC_GAS\n    );\n\n    return near.promiseReturn(complete);\n  }\n\n  @call\n  on_transfer_complete(): void {\n    assert_self();\n    assert_single_promise_success();\n\n    near.log(\"transfer complete\");\n    // reset contribution tracker\n    recordTransfer(this.contributions);\n  }\n\n  // --------------------------------------------------------------------------\n  // Private methods\n  // --------------------------------------------------------------------------\n\n  private assert_owner(): void {\n    const caller = near.predecessorAccountId();\n    assert(\n      this.owner == caller,\n      \"Only the owner of this contract may call this method\"\n    );\n  }\n\n  private assert_financial_safety_limits(deposit: BigInt | number): void {\n    const new_total = BigInt(deposit.toString()) + this.contributions.received;\n    assert(\n      deposit <= CONTRIBUTION_SAFETY_LIMIT,\n      \"You are trying to attach too many NEAR Tokens to this call.  There is a safe limit while in beta of 5 NEAR\"\n    );\n    assert(\n      new_total <= CONTRIBUTION_SAFETY_LIMIT,\n      \"Maximum contributions reached.  Please call transfer() to continue receiving funds.\"\n    );\n  }\n}\n"],"names":["call","target","key","descriptor","NearBindgen","_init","args","deserializeArgs","ret","init","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","log","params","env","map","x","undefined","JSON","stringify","join","signerAccountId","signer_account_id","read_register","predecessorAccountId","predecessor_account_id","attachedDeposit","attached_deposit","panic","msg","storageRead","storage_read","jsvmJsContractName","jsvm_js_contract_name","storageGetEvicted","input","promiseThen","promiseIndex","accountId","methodName","amount","gas","promise_then","promiseBatchCreate","promise_batch_create","promiseBatchActionTransfer","promise_batch_action_transfer","promiseResultsCount","promise_results_count","PromiseResult","promiseResult","resultIdx","status","promise_result","Successful","Failed","NotReady","promiseReturn","promiseIdx","promise_return","storageWrite","value","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","rawState","near","state","parse","c","default","assign","item","constructor","Error","serializeReturn","u8ArrayToBytes","array","e","String","fromCharCode","assert","b","str","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","data","Uint32Array","Uint8Array","buffer","Vector","length","len","isEmpty","get","storageKey","swapRemove","pop","last","push","element","lastIndex","lastKey","replace","extend","elements","Symbol","iterator","VectorIterator","clear","i","toArray","v","vector","current","next","done","Message","max_length","text","anonymous","contribution","BigInt","sender","ContributionTracker","count","total","received","transferred","updateContribution","tracker","average","Number","recordTransfer","assert_self","caller","self","assert_single_promise_success","resultsCount","result","ONE_NEAR","TGAS","XCC_GAS","CONTRIBUTION_SAFETY_LIMIT","toString","Contract","contributions","owner","allow_anonymous","messages","say","message","deposit","assert_financial_safety_limits","list","assert_owner","Math","max","summarize","transfer","promise","complete","on_transfer_complete","new_total"],"mappings":"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"}